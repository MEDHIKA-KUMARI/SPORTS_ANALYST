create table matches(
id int primary key,
city character varying(255),
date date,
player_of_match character varying(255),
venue character varying(255),
neutral_venue int,
team1 character varying(255),
team2 character varying(255),
toss_winner character varying(255),
toss_decision character varying(255),
winner character varying(255),
result character varying(255),
result_margin int,
eliminator character varying(255),
method character varying(255),
umpire1 character varying(255),
umpire2 character varying(255)
);
select * from matches;
create table deliveries(
id int,
inning int,
over int,
ball int,
batsman character varying(255),
non_striker character varying(255),
bowler character varying(255),
batsman_runs int,
extra_runs int,
total_runs int,
is_wicket int,
dismissal_kind character varying(255),
player_dismissed character varying(255),
fielder character varying(255),
extras_type character varying(255),
batting_team character varying(255),
bowling_team character varying(255)
);
select * from deliveries;
copy matches from 'C:\Program Files\PostgreSQL\13\copy data\ipl_matches1.csv' delimiter ',' csv header;
select * from matches;
copy deliveries from 'C:\Program Files\PostgreSQL\13\copy data\ipl_ball1.csv' delimiter ',' csv header;
select * from deliveries;
select * from deliveries limit 20;
select * from matches limit 20;
select * from matches where date= '02-05-2013';
select * from matches where result_margin>100 order by result_margin desc;
select * from matches where eliminator= 'Y' order by date desc;
select distinct count(city) as count_of_city from matches where not city= 'NA' ;
select distinct city from matches where not city= 'NA' order by city;
create table deliveries_v02 as select *, 
case when total_runs>=4 then 'boundary'
when total_runs= 0 then 'dot'
else 'other'
end as ball_result
from deliveries;
select * from deliveries_v02;
select count(ball_result) as total_boundaries from deliveries_v02 where ball_result = 'boundary';
select count(ball_result) as total_dot_balls from deliveries_v02 where ball_result = 'dot';
select batting_team, count(ball_result) as total_scored_boundaries from deliveries_v02
where ball_result= 'boundary' group by batting_team order by total_scored_boundaries desc;
select bowling_team, count(ball_result) as total_dot_bowled from deliveries_v02
where ball_result= 'dot' group by bowling_team;
select dismissal_kind, count(player_dismissed) as total_dismissal from deliveries group by dismissal_kind;
select bowler, extra_runs from deliveries order by extra_runs desc limit 5;
create table deliveries_v03 as select deliveries_v02.*,
matches.venue,
matches.date as match_date 
from deliveries_v02 right join matches
on deliveries_v02.id= matches.id;
select * from deliveries_v03;
select venue, sum(total_runs) as total_runs 
from deliveries_v03 group by venue order by total_runs desc;
select extract(year from match_date) as IPL_year, sum(total_runs) as runs 
from deliveries_v03 where venue = 'Eden Gardens' 
group by IPL_year order by runs desc;
select distinct team1 from matches;
create table matches_corrected as 
select *, replace(team1, 'Rising Pune Supergiants', 'Rising Pune Supergiant') 
as team1_corr, 
replace(team2, 'Rising Pune Supergiants', 'Rising Pune Supergiant')
as team2_corr from matches;
select distinct team1_corr from matches_corrected;
create table deliveries_v04 as select concat(id,'-',inning,'-',over,'-',ball) 
as ball_id, * from deliveries_v03;
select count(*) as count_of_rows from deliveries_v04;
select distinct count(ball_id) as distinct_ball_id from deliveries_v04;
create table deliveries_v05 as select *, row_number() over (partition by ball_id) as r_num from deliveries_v04;
select * from deliveries_v05 WHERE r_num=2;
SELECT * FROM deliveries_v05 WHERE ball_id in (select BALL_ID from deliveries_v05 WHERE r_num=2);

select round(53.6281,1);






